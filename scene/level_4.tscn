[gd_scene load_steps=18 format=3 uid="uid://dvha1fv340kd5"]

[ext_resource type="Texture2D" uid="uid://dwet6r5rtvbij" path="res://Pixel Adventure 1/Free/Terrain/Terrain (16x16).png" id="1_chxx6"]
[ext_resource type="Texture2D" uid="uid://x8w77ng5enub" path="res://all/BG.png" id="1_pi3ob"]
[ext_resource type="PackedScene" uid="uid://by23bg6ynbae5" path="res://eachlevel/player.tscn" id="2_8m82d"]
[ext_resource type="PackedScene" uid="uid://4ofbtym4h4xu" path="res://obestcle/chain.tscn" id="3_7i8f2"]
[ext_resource type="Script" path="res://script/back button.gd" id="4_dff4l"]
[ext_resource type="FontFile" uid="uid://me8avh1xxkol" path="res://built titling sb.otf" id="5_t36qj"]
[ext_resource type="PackedScene" uid="uid://c66vy5mki8y7x" path="res://eachlevel/asp.tscn" id="7_fsox0"]
[ext_resource type="PackedScene" uid="uid://dadh5x0qo7lrm" path="res://eachlevel/arrow.tscn" id="8_qjxhm"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_k07b2"]
texture = ExtResource("1_chxx6")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:0/0 = 0
12:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:0/0/physics_layer_0/angular_velocity = 0.0
12:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:0/0 = 0
13:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:0/0/physics_layer_0/angular_velocity = 0.0
13:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:0/0 = 0
14:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:0/0/physics_layer_0/angular_velocity = 0.0
14:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:0/0 = 0
15:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:0/0/physics_layer_0/angular_velocity = 0.0
15:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:0/0 = 0
17:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:0/0/physics_layer_0/angular_velocity = 0.0
17:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:0/0 = 0
18:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:0/0/physics_layer_0/angular_velocity = 0.0
18:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:0/0 = 0
19:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:0/0/physics_layer_0/angular_velocity = 0.0
19:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
9:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:1/0 = 0
12:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:1/0/physics_layer_0/angular_velocity = 0.0
12:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:1/0 = 0
13:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:1/0/physics_layer_0/angular_velocity = 0.0
13:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:1/0 = 0
14:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:1/0/physics_layer_0/angular_velocity = 0.0
14:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:1/0 = 0
15:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:1/0/physics_layer_0/angular_velocity = 0.0
15:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:1/0 = 0
17:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:1/0/physics_layer_0/angular_velocity = 0.0
17:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:1/0 = 0
18:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:1/0/physics_layer_0/angular_velocity = 0.0
18:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:1/0 = 0
19:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:1/0/physics_layer_0/angular_velocity = 0.0
19:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:2/0 = 0
13:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:2/0/physics_layer_0/angular_velocity = 0.0
13:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:2/0 = 0
14:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:2/0/physics_layer_0/angular_velocity = 0.0
14:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:2/0 = 0
15:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:2/0/physics_layer_0/angular_velocity = 0.0
15:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:2/0 = 0
17:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:2/0/physics_layer_0/angular_velocity = 0.0
17:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:2/0 = 0
18:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:2/0/physics_layer_0/angular_velocity = 0.0
18:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:2/0 = 0
19:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:2/0/physics_layer_0/angular_velocity = 0.0
19:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:4/0 = 0
12:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:4/0/physics_layer_0/angular_velocity = 0.0
12:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:4/0 = 0
13:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:4/0/physics_layer_0/angular_velocity = 0.0
13:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:4/0 = 0
14:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:4/0/physics_layer_0/angular_velocity = 0.0
14:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:4/0 = 0
15:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:4/0/physics_layer_0/angular_velocity = 0.0
15:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:4/0 = 0
17:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:4/0/physics_layer_0/angular_velocity = 0.0
17:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:4/0 = 0
18:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:4/0/physics_layer_0/angular_velocity = 0.0
18:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:4/0 = 0
19:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:4/0/physics_layer_0/angular_velocity = 0.0
19:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:4/0 = 0
20:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:4/0/physics_layer_0/angular_velocity = 0.0
20:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:4/0 = 0
21:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:4/0/physics_layer_0/angular_velocity = 0.0
21:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
0:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
10:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:5/0 = 0
12:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:5/0/physics_layer_0/angular_velocity = 0.0
12:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:5/0 = 0
13:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:5/0/physics_layer_0/angular_velocity = 0.0
13:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:5/0 = 0
14:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:5/0/physics_layer_0/angular_velocity = 0.0
14:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:5/0 = 0
15:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:5/0/physics_layer_0/angular_velocity = 0.0
15:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:5/0 = 0
17:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:5/0/physics_layer_0/angular_velocity = 0.0
17:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:5/0 = 0
18:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:5/0/physics_layer_0/angular_velocity = 0.0
18:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:5/0 = 0
19:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:5/0/physics_layer_0/angular_velocity = 0.0
19:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:5/0 = 0
20:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:5/0/physics_layer_0/angular_velocity = 0.0
20:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:5/0 = 0
21:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:5/0/physics_layer_0/angular_velocity = 0.0
21:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:6/0 = 0
13:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:6/0/physics_layer_0/angular_velocity = 0.0
13:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:6/0 = 0
14:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:6/0/physics_layer_0/angular_velocity = 0.0
14:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:6/0 = 0
15:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:6/0/physics_layer_0/angular_velocity = 0.0
15:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:6/0 = 0
17:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:6/0/physics_layer_0/angular_velocity = 0.0
17:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:6/0 = 0
18:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:6/0/physics_layer_0/angular_velocity = 0.0
18:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:6/0 = 0
19:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:6/0/physics_layer_0/angular_velocity = 0.0
19:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
0:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
10:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:8/0 = 0
12:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:8/0/physics_layer_0/angular_velocity = 0.0
12:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:8/0 = 0
13:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:8/0/physics_layer_0/angular_velocity = 0.0
13:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:8/0 = 0
14:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:8/0/physics_layer_0/angular_velocity = 0.0
14:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:8/0 = 0
15:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:8/0/physics_layer_0/angular_velocity = 0.0
15:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:8/0 = 0
17:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:8/0/physics_layer_0/angular_velocity = 0.0
17:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:8/0 = 0
18:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:8/0/physics_layer_0/angular_velocity = 0.0
18:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:8/0 = 0
19:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:8/0/physics_layer_0/angular_velocity = 0.0
19:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:8/0 = 0
20:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:8/0/physics_layer_0/angular_velocity = 0.0
20:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
0:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:9/0 = 0
12:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:9/0/physics_layer_0/angular_velocity = 0.0
12:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:9/0 = 0
13:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:9/0/physics_layer_0/angular_velocity = 0.0
13:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:9/0 = 0
14:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:9/0/physics_layer_0/angular_velocity = 0.0
14:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:9/0 = 0
15:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:9/0/physics_layer_0/angular_velocity = 0.0
15:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:9/0 = 0
17:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:9/0/physics_layer_0/angular_velocity = 0.0
17:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:9/0 = 0
18:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:9/0/physics_layer_0/angular_velocity = 0.0
18:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:9/0 = 0
19:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:9/0/physics_layer_0/angular_velocity = 0.0
19:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:9/0 = 0
20:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:9/0/physics_layer_0/angular_velocity = 0.0
20:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:10/0 = 0
0:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:10/0/physics_layer_0/angular_velocity = 0.0
0:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:10/0 = 0
8:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:10/0/physics_layer_0/angular_velocity = 0.0
8:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:10/0 = 0
13:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:10/0/physics_layer_0/angular_velocity = 0.0
13:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:10/0 = 0
14:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:10/0/physics_layer_0/angular_velocity = 0.0
14:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:10/0 = 0
15:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:10/0/physics_layer_0/angular_velocity = 0.0
15:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:10/0 = 0
18:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:10/0/physics_layer_0/angular_velocity = 0.0
18:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:10/0 = 0
19:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:10/0/physics_layer_0/angular_velocity = 0.0
19:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:10/0 = 0
20:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:10/0/physics_layer_0/angular_velocity = 0.0
20:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)

[sub_resource type="TileSet" id="TileSet_hmdld"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_k07b2")

[sub_resource type="GDScript" id="GDScript_ow0cc"]
script/source = "extends Node2D

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	pass
"

[sub_resource type="Animation" id="Animation_4xq4k"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("chainN2:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("chainN4:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.5708]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("chainN5:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.5708]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("chainN3:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.959931]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("chainN6:rotation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("chainN7:rotation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [-5.37561]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("chainN8:rotation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.959931]
}

[sub_resource type="Animation" id="Animation_k8qf4"]
resource_name = "bigchin"
length = 3.0
loop_mode = 1
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("chainN2:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 6.28319]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("chainN4:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.5708, 7.85398]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("chainN5:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.5708, -4.71239]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("chainN6:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.977789, 7.26057]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("chainN7:rotation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [-5.37561, 0.907571]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("chainN3:rotation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 1.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.959931, -0.959931]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("chainN8:rotation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(-0.02, 1.53),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [-0.959931, 0.959931]
}

[sub_resource type="Animation" id="Animation_fdroi"]
resource_name = "idle"
loop_mode = 1
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("chainN3:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.01, 0.5, 1),
"transitions": PackedFloat32Array(0.2, 1, -0.2),
"update": 0,
"values": [-0.959931, 0.959931, -0.959931]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_cmx8d"]
_data = {
"RESET": SubResource("Animation_4xq4k"),
"bigchin": SubResource("Animation_k8qf4"),
"idle": SubResource("Animation_fdroi")
}

[sub_resource type="GDScript" id="GDScript_i3ii2"]
script/source = "extends \"res://script/enemymain.gd\"

#@export var nextscene =\"res://eachlevel/ui.tscn\"

#ithu next stage porathuku
func _on_body_entered(body):
	if body.name ==\"player\":
		get_tree().change_scene_to_file(\"res://scene/level_2.tscn\")
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_f5maq"]
size = Vector2(30, 300)

[node name="level4" type="Node2D"]

[node name="Bg" type="Sprite2D" parent="."]
position = Vector2(3, -68)
texture = ExtResource("1_pi3ob")

[node name="Camera2D" type="Camera2D" parent="."]

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_hmdld")
format = 2
layer_0/tile_data = PackedInt32Array(655323, 458752, 1, 720859, 458752, 1, 786395, 458752, 1, 851931, 458752, 1, 917467, 458752, 1, 983003, 458752, 1, 1048539, 458752, 1, 1114075, 458752, 1, 1179611, 458752, 1, 1245147, 458752, 1, 1310683, 458752, 1, 655324, 458752, 1, 720860, 458752, 1, 786396, 458752, 1, 851932, 458752, 1, 917468, 458752, 1, 983004, 458752, 1, 1048540, 458752, 1, 1114076, 458752, 1, 1179612, 458752, 1, 1245148, 458752, 1, 1310684, 458752, 1, 655325, 458752, 1, 720861, 458752, 1, 786397, 458752, 1, 851933, 458752, 1, 917469, 458752, 1, 983005, 458752, 1, 1048541, 458752, 1, 1114077, 458752, 1, 1179613, 458752, 1, 1245149, 458752, 1, 1310685, 458752, 1, 655326, 458752, 1, 720862, 458752, 1, 786398, 458752, 1, 851934, 458752, 1, 917470, 458752, 1, 983006, 458752, 1, 1048542, 458752, 1, 1114078, 458752, 1, 1179614, 458752, 1, 1245150, 458752, 1, 1310686, 458752, 1, 655327, 458752, 1, 720863, 458752, 1, 786399, 458752, 1, 851935, 458752, 1, 917471, 458752, 1, 983007, 458752, 1, 1048543, 458752, 1, 1114079, 458752, 1, 1179615, 458752, 1, 1245151, 458752, 1, 1310687, 458752, 1, 655328, 458752, 1, 720864, 458752, 1, 786400, 458752, 1, 851936, 458752, 1, 917472, 458752, 1, 983008, 458752, 1, 1048544, 458752, 1, 1114080, 458752, 1, 1179616, 458752, 1, 1245152, 458752, 1, 1310688, 458752, 1, 655329, 458752, 1, 720865, 458752, 1, 786401, 458752, 1, 851937, 458752, 1, 917473, 458752, 1, 983009, 458752, 1, 1048545, 458752, 1, 1114081, 458752, 1, 1179617, 458752, 1, 1245153, 458752, 1, 1310689, 458752, 1, 655330, 458752, 1, 720866, 458752, 1, 786402, 458752, 1, 851938, 458752, 1, 917474, 458752, 1, 983010, 458752, 1, 1048546, 458752, 1, 1114082, 458752, 1, 1179618, 458752, 1, 1245154, 458752, 1, 1310690, 458752, 1, 655331, 458752, 1, 720867, 458752, 1, 786403, 458752, 1, 851939, 458752, 1, 917475, 458752, 1, 983011, 458752, 1, 1048547, 458752, 1, 1114083, 458752, 1, 1179619, 458752, 1, 1245155, 458752, 1, 1310691, 458752, 1, 655332, 458752, 1, 720868, 458752, 1, 786404, 458752, 1, 851940, 458752, 1, 917476, 458752, 1, 983012, 458752, 1, 1048548, 458752, 1, 1114084, 458752, 1, 1179620, 458752, 1, 1245156, 458752, 1, 1310692, 458752, 1, 655333, 458752, 1, 720869, 458752, 1, 786405, 458752, 1, 851941, 458752, 1, 917477, 458752, 1, 983013, 458752, 1, 1048549, 458752, 1, 1114085, 458752, 1, 1179621, 458752, 1, 1245157, 458752, 1, 1310693, 458752, 1, 655334, 458752, 1, 720870, 458752, 1, 786406, 458752, 1, 851942, 458752, 1, 917478, 458752, 1, 983014, 458752, 1, 1048550, 458752, 1, 1114086, 458752, 1, 1179622, 458752, 1, 1245158, 458752, 1, 1310694, 458752, 1, 655335, 458752, 1, 720871, 458752, 1, 786407, 458752, 1, 851943, 458752, 1, 917479, 458752, 1, 983015, 458752, 1, 1048551, 458752, 1, 1114087, 458752, 1, 1179623, 458752, 1, 1245159, 458752, 1, 1310695, 458752, 1, 655336, 458752, 1, 720872, 458752, 1, 786408, 458752, 1, 851944, 458752, 1, 917480, 458752, 1, 983016, 458752, 1, 1048552, 458752, 1, 1114088, 458752, 1, 1179624, 458752, 1, 1245160, 458752, 1, 1310696, 458752, 1, 655337, 458752, 1, 720873, 458752, 1, 786409, 458752, 1, 851945, 458752, 1, 917481, 458752, 1, 983017, 458752, 1, 1048553, 458752, 1, 1114089, 458752, 1, 1179625, 458752, 1, 1245161, 458752, 1, 1310697, 458752, 1, 655338, 458752, 1, 720874, 458752, 1, 786410, 458752, 1, 851946, 458752, 1, 917482, 458752, 1, 983018, 458752, 1, 1048554, 458752, 1, 1114090, 458752, 1, 1179626, 458752, 1, 1245162, 458752, 1, 1310698, 458752, 1, 655339, 458752, 1, 720875, 458752, 1, 786411, 458752, 1, 851947, 458752, 1, 917483, 458752, 1, 983019, 458752, 1, 1048555, 458752, 1, 1114091, 458752, 1, 1179627, 458752, 1, 1245163, 458752, 1, 1310699, 458752, 1, 655340, 458752, 1, 720876, 458752, 1, 786412, 458752, 1, 851948, 458752, 1, 917484, 458752, 1, 983020, 458752, 1, 1048556, 458752, 1, 1114092, 458752, 1, 1179628, 458752, 1, 1245164, 458752, 1, 1310700, 458752, 1, 655341, 458752, 1, 720877, 458752, 1, 786413, 458752, 1, 851949, 458752, 1, 917485, 458752, 1, 983021, 458752, 1, 1048557, 458752, 1, 1114093, 458752, 1, 1179629, 458752, 1, 1245165, 458752, 1, 1310701, 458752, 1, 655342, 458752, 1, 720878, 458752, 1, 786414, 458752, 1, 851950, 458752, 1, 917486, 458752, 1, 983022, 458752, 1, 1048558, 458752, 1, 1114094, 458752, 1, 1179630, 458752, 1, 1245166, 458752, 1, 1310702, 458752, 1, 655343, 458752, 1, 720879, 458752, 1, 786415, 458752, 1, 851951, 458752, 1, 917487, 458752, 1, 983023, 458752, 1, 1048559, 458752, 1, 1114095, 458752, 1, 1179631, 458752, 1, 1245167, 458752, 1, 1310703, 458752, 1, 655344, 458752, 1, 720880, 458752, 1, 786416, 458752, 1, 851952, 458752, 1, 917488, 458752, 1, 983024, 458752, 1, 1048560, 458752, 1, 1114096, 458752, 1, 1179632, 458752, 1, 1245168, 458752, 1, 1310704, 458752, 1, 655345, 458752, 1, 720881, 458752, 1, 786417, 458752, 1, 851953, 458752, 1, 917489, 458752, 1, 983025, 458752, 1, 1048561, 458752, 1, 1114097, 458752, 1, 1179633, 458752, 1, 1245169, 458752, 1, 1310705, 458752, 1, 655346, 458752, 1, 720882, 458752, 1, 786418, 458752, 1, 851954, 458752, 1, 917490, 458752, 1, 983026, 458752, 1, 1048562, 458752, 1, 1114098, 458752, 1, 1179634, 458752, 1, 1245170, 458752, 1, 1310706, 458752, 1, 655347, 458752, 1, 720883, 458752, 1, 786419, 458752, 1, 851955, 458752, 1, 917491, 458752, 1, 983027, 458752, 1, 1048563, 458752, 1, 1114099, 458752, 1, 1179635, 458752, 1, 1245171, 458752, 1, 1310707, 458752, 1, 655348, 458752, 1, 720884, 458752, 1, 786420, 458752, 1, 851956, 458752, 1, 917492, 458752, 1, 983028, 458752, 1, 1048564, 458752, 1, 1114100, 458752, 1, 1179636, 458752, 1, 1245172, 458752, 1, 1310708, 458752, 1, 655349, 458752, 1, 720885, 458752, 1, 786421, 458752, 1, 851957, 458752, 1, 917493, 458752, 1, 983029, 458752, 1, 1048565, 458752, 1, 1114101, 458752, 1, 1179637, 458752, 1, 1245173, 458752, 1, 1310709, 458752, 1, 655350, 458752, 1, 720886, 458752, 1, 786422, 458752, 1, 851958, 458752, 1, 917494, 458752, 1, 983030, 458752, 1, 1048566, 458752, 1, 1114102, 458752, 1, 1179638, 458752, 1, 1245174, 458752, 1, 1310710, 458752, 1, 655351, 458752, 1, 720887, 458752, 1, 786423, 458752, 1, 851959, 458752, 1, 917495, 458752, 1, 983031, 458752, 1, 1048567, 458752, 1, 1114103, 458752, 1, 1179639, 458752, 1, 1245175, 458752, 1, 1310711, 458752, 1, 655352, 458752, 1, 720888, 458752, 1, 786424, 458752, 1, 851960, 458752, 1, 917496, 458752, 1, 983032, 458752, 1, 1048568, 458752, 1, 1114104, 458752, 1, 1179640, 458752, 1, 1245176, 458752, 1, 1310712, 458752, 1, 655353, 458752, 1, 720889, 458752, 1, 786425, 458752, 1, 851961, 458752, 1, 917497, 458752, 1, 983033, 458752, 1, 1048569, 458752, 1, 1114105, 458752, 1, 1179641, 458752, 1, 1245177, 458752, 1, 1310713, 458752, 1, 655354, 458752, 1, 720890, 458752, 1, 786426, 458752, 1, 851962, 458752, 1, 917498, 458752, 1, 983034, 458752, 1, 1048570, 458752, 1, 1114106, 458752, 1, 1179642, 458752, 1, 1245178, 458752, 1, 1310714, 458752, 1, 655355, 458752, 1, 720891, 458752, 1, 786427, 458752, 1, 851963, 458752, 1, 917499, 458752, 1, 983035, 458752, 1, 1048571, 458752, 1, 1114107, 458752, 1, 1179643, 458752, 1, 1245179, 458752, 1, 1310715, 458752, 1, 655356, 458752, 1, 720892, 458752, 1, 786428, 458752, 1, 851964, 458752, 1, 917500, 458752, 1, 983036, 458752, 1, 1048572, 458752, 1, 1114108, 458752, 1, 1179644, 458752, 1, 1245180, 458752, 1, 1310716, 458752, 1, 655357, 458752, 1, 720893, 458752, 1, 786429, 458752, 1, 851965, 458752, 1, 917501, 458752, 1, 983037, 458752, 1, 1048573, 458752, 1, 1114109, 458752, 1, 1179645, 458752, 1, 1245181, 458752, 1, 1310717, 458752, 1, 655358, 458752, 1, 720894, 458752, 1, 786430, 458752, 1, 851966, 458752, 1, 917502, 458752, 1, 983038, 458752, 1, 1048574, 458752, 1, 1114110, 458752, 1, 1179646, 458752, 1, 1245182, 458752, 1, 1310718, 458752, 1, 655359, 458752, 1, 720895, 458752, 1, 786431, 458752, 1, 851967, 458752, 1, 917503, 458752, 1, 983039, 458752, 1, 1048575, 458752, 1, 1114111, 458752, 1, 1179647, 458752, 1, 1245183, 458752, 1, 1310719, 458752, 1, 589824, 458752, 1, 655360, 458752, 1, 720896, 458752, 1, 786432, 458752, 1, 851968, 458752, 1, 917504, 458752, 1, 983040, 458752, 1, 1048576, 458752, 1, 1114112, 458752, 1, 1179648, 458752, 1, 1245184, 458752, 1, 589825, 458752, 1, 655361, 458752, 1, 720897, 458752, 1, 786433, 458752, 1, 851969, 458752, 1, 917505, 458752, 1, 983041, 458752, 1, 1048577, 458752, 1, 1114113, 458752, 1, 1179649, 458752, 1, 1245185, 458752, 1, 589826, 458752, 1, 655362, 458752, 1, 720898, 458752, 1, 786434, 458752, 1, 851970, 458752, 1, 917506, 458752, 1, 983042, 458752, 1, 1048578, 458752, 1, 1114114, 458752, 1, 1179650, 458752, 1, 1245186, 458752, 1, 589827, 458752, 1, 655363, 458752, 1, 720899, 458752, 1, 786435, 458752, 1, 851971, 458752, 1, 917507, 458752, 1, 983043, 458752, 1, 1048579, 458752, 1, 1114115, 458752, 1, 1179651, 458752, 1, 1245187, 458752, 1, 589828, 458752, 1, 655364, 458752, 1, 720900, 458752, 1, 786436, 458752, 1, 851972, 458752, 1, 917508, 458752, 1, 983044, 458752, 1, 1048580, 458752, 1, 1114116, 458752, 1, 1179652, 458752, 1, 1245188, 458752, 1, 589829, 458752, 1, 655365, 458752, 1, 720901, 458752, 1, 786437, 458752, 1, 851973, 458752, 1, 917509, 458752, 1, 983045, 458752, 1, 1048581, 458752, 1, 1114117, 458752, 1, 1179653, 458752, 1, 1245189, 458752, 1, 589830, 458752, 1, 655366, 458752, 1, 720902, 458752, 1, 786438, 458752, 1, 851974, 458752, 1, 917510, 458752, 1, 983046, 458752, 1, 1048582, 458752, 1, 1114118, 458752, 1, 1179654, 458752, 1, 1245190, 458752, 1, 589831, 458752, 1, 655367, 458752, 1, 720903, 458752, 1, 786439, 458752, 1, 851975, 458752, 1, 917511, 458752, 1, 983047, 458752, 1, 1048583, 458752, 1, 1114119, 458752, 1, 1179655, 458752, 1, 1245191, 458752, 1, 589832, 458752, 1, 655368, 458752, 1, 720904, 458752, 1, 786440, 458752, 1, 851976, 458752, 1, 917512, 458752, 1, 983048, 458752, 1, 1048584, 458752, 1, 1114120, 458752, 1, 1179656, 458752, 1, 1245192, 458752, 1, 589833, 458752, 1, 655369, 458752, 1, 720905, 458752, 1, 786441, 458752, 1, 851977, 458752, 1, 917513, 458752, 1, 983049, 458752, 1, 1048585, 458752, 1, 1114121, 458752, 1, 1179657, 458752, 1, 1245193, 458752, 1, 589834, 458752, 1, 655370, 458752, 1, 720906, 458752, 1, 786442, 458752, 1, 851978, 458752, 1, 917514, 458752, 1, 983050, 458752, 1, 1048586, 458752, 1, 1114122, 458752, 1, 1179658, 458752, 1, 1245194, 458752, 1, 589835, 458752, 1, 655371, 458752, 1, 720907, 458752, 1, 786443, 458752, 1, 851979, 458752, 1, 917515, 458752, 1, 983051, 458752, 1, 1048587, 458752, 1, 1114123, 458752, 1, 1179659, 458752, 1, 1245195, 458752, 1, 589836, 458752, 1, 655372, 458752, 1, 720908, 458752, 1, 786444, 458752, 1, 851980, 458752, 1, 917516, 458752, 1, 983052, 458752, 1, 1048588, 458752, 1, 1114124, 458752, 1, 1179660, 458752, 1, 1245196, 458752, 1, 589837, 458752, 1, 655373, 458752, 1, 720909, 458752, 1, 786445, 458752, 1, 851981, 458752, 1, 917517, 458752, 1, 983053, 458752, 1, 1048589, 458752, 1, 1114125, 458752, 1, 1179661, 458752, 1, 1245197, 458752, 1, 589838, 458752, 1, 655374, 458752, 1, 720910, 458752, 1, 786446, 458752, 1, 851982, 458752, 1, 917518, 458752, 1, 983054, 458752, 1, 1048590, 458752, 1, 1114126, 458752, 1, 1179662, 458752, 1, 1245198, 458752, 1, 589839, 458752, 1, 655375, 458752, 1, 720911, 458752, 1, 786447, 458752, 1, 851983, 458752, 1, 917519, 458752, 1, 983055, 458752, 1, 1048591, 458752, 1, 1114127, 458752, 1, 1179663, 458752, 1, 1245199, 458752, 1, 589840, 458752, 1, 655376, 458752, 1, 720912, 458752, 1, 786448, 458752, 1, 851984, 458752, 1, 917520, 458752, 1, 983056, 458752, 1, 1048592, 458752, 1, 1114128, 458752, 1, 1179664, 458752, 1, 1245200, 458752, 1, 589841, 458752, 1, 655377, 458752, 1, 720913, 458752, 1, 786449, 458752, 1, 851985, 458752, 1, 917521, 458752, 1, 983057, 458752, 1, 1048593, 458752, 1, 1114129, 458752, 1, 1179665, 458752, 1, 1245201, 458752, 1, 589842, 458752, 1, 655378, 458752, 1, 720914, 458752, 1, 786450, 458752, 1, 851986, 458752, 1, 917522, 458752, 1, 983058, 458752, 1, 1048594, 458752, 1, 1114130, 458752, 1, 1179666, 458752, 1, 1245202, 458752, 1, 589843, 458752, 1, 655379, 458752, 1, 720915, 458752, 1, 786451, 458752, 1, 851987, 458752, 1, 917523, 458752, 1, 983059, 458752, 1, 1048595, 458752, 1, 1114131, 458752, 1, 1179667, 458752, 1, 1245203, 458752, 1, 589844, 458752, 1, 655380, 458752, 1, 720916, 458752, 1, 786452, 458752, 1, 851988, 458752, 1, 917524, 458752, 1, 983060, 458752, 1, 1048596, 458752, 1, 1114132, 458752, 1, 1179668, 458752, 1, 1245204, 458752, 1, 589845, 458752, 1, 655381, 458752, 1, 720917, 458752, 1, 786453, 458752, 1, 851989, 458752, 1, 917525, 458752, 1, 983061, 458752, 1, 1048597, 458752, 1, 1114133, 458752, 1, 1179669, 458752, 1, 1245205, 458752, 1, 589846, 458752, 1, 655382, 458752, 1, 720918, 458752, 1, 786454, 458752, 1, 851990, 458752, 1, 917526, 458752, 1, 983062, 458752, 1, 1048598, 458752, 1, 1114134, 458752, 1, 1179670, 458752, 1, 1245206, 458752, 1, 589847, 458752, 1, 655383, 458752, 1, 720919, 458752, 1, 786455, 458752, 1, 851991, 458752, 1, 917527, 458752, 1, 983063, 458752, 1, 1048599, 458752, 1, 1114135, 458752, 1, 1179671, 458752, 1, 1245207, 458752, 1, 589848, 458752, 1, 655384, 458752, 1, 720920, 458752, 1, 786456, 458752, 1, 851992, 458752, 1, 917528, 458752, 1, 983064, 458752, 1, 1048600, 458752, 1, 1114136, 458752, 1, 1179672, 458752, 1, 1245208, 458752, 1, 589849, 458752, 1, 655385, 458752, 1, 720921, 458752, 1, 786457, 458752, 1, 851993, 458752, 1, 917529, 458752, 1, 983065, 458752, 1, 1048601, 458752, 1, 1114137, 458752, 1, 1179673, 458752, 1, 1245209, 458752, 1, 589850, 458752, 1, 655386, 458752, 1, 720922, 458752, 1, 786458, 458752, 1, 851994, 458752, 1, 917530, 458752, 1, 983066, 458752, 1, 1048602, 458752, 1, 1114138, 458752, 1, 1179674, 458752, 1, 1245210, 458752, 1, 589851, 458752, 1, 655387, 458752, 1, 720923, 458752, 1, 786459, 458752, 1, 851995, 458752, 1, 917531, 458752, 1, 983067, 458752, 1, 1048603, 458752, 1, 1114139, 458752, 1, 1179675, 458752, 1, 1245211, 458752, 1, 589852, 458752, 1, 655388, 458752, 1, 720924, 458752, 1, 786460, 458752, 1, 851996, 458752, 1, 917532, 458752, 1, 983068, 458752, 1, 1048604, 458752, 1, 1114140, 458752, 1, 1179676, 458752, 1, 1245212, 458752, 1, 589853, 458752, 1, 655389, 458752, 1, 720925, 458752, 1, 786461, 458752, 1, 851997, 458752, 1, 917533, 458752, 1, 983069, 458752, 1, 1048605, 458752, 1, 1114141, 458752, 1, 1179677, 458752, 1, 1245213, 458752, 1, 589854, 458752, 1, 655390, 458752, 1, 720926, 458752, 1, 786462, 458752, 1, 851998, 458752, 1, 917534, 458752, 1, 983070, 458752, 1, 1048606, 458752, 1, 1114142, 458752, 1, 1179678, 458752, 1, 1245214, 458752, 1, 589855, 458752, 1, 655391, 458752, 1, 720927, 458752, 1, 786463, 458752, 1, 851999, 458752, 1, 917535, 458752, 1, 983071, 458752, 1, 1048607, 458752, 1, 1114143, 458752, 1, 1179679, 458752, 1, 1245215, 458752, 1, 589856, 458752, 1, 655392, 458752, 1, 720928, 458752, 1, 786464, 458752, 1, 852000, 458752, 1, 917536, 458752, 1, 983072, 458752, 1, 1048608, 458752, 1, 1114144, 458752, 1, 1179680, 458752, 1, 1245216, 458752, 1, 589857, 458752, 1, 655393, 458752, 1, 720929, 458752, 1, 786465, 458752, 1, 852001, 458752, 1, 917537, 458752, 1, 983073, 458752, 1, 1048609, 458752, 1, 1114145, 458752, 1, 1179681, 458752, 1, 1245217, 458752, 1, 589858, 458752, 1, 655394, 458752, 1, 720930, 458752, 1, 786466, 458752, 1, 852002, 458752, 1, 917538, 458752, 1, 983074, 458752, 1, 1048610, 458752, 1, 1114146, 458752, 1, 1179682, 458752, 1, 1245218, 458752, 1, 589859, 458752, 1, 655395, 458752, 1, 720931, 458752, 1, 786467, 458752, 1, 852003, 458752, 1, 917539, 458752, 1, 983075, 458752, 1, 1048611, 458752, 1, 1114147, 458752, 1, 1179683, 458752, 1, 1245219, 458752, 1, 589860, 458752, 1, 655396, 458752, 1, 720932, 458752, 1, 786468, 458752, 1, 852004, 458752, 1, 917540, 458752, 1, 983076, 458752, 1, 1048612, 458752, 1, 1114148, 458752, 1, 1179684, 458752, 1, 1245220, 458752, 1, 589861, 458752, 1, 655397, 458752, 1, 720933, 458752, 1, 786469, 458752, 1, 852005, 458752, 1, 917541, 458752, 1, 983077, 458752, 1, 1048613, 458752, 1, 1114149, 458752, 1, 1179685, 458752, 1, 1245221, 458752, 1, 589862, 458752, 1, 655398, 458752, 1, 720934, 458752, 1, 786470, 458752, 1, 852006, 458752, 1, 917542, 458752, 1, 983078, 458752, 1, 1048614, 458752, 1, 1114150, 458752, 1, 1179686, 458752, 1, 1245222, 458752, 1, -983077, 983040, 1, -917541, 983040, 2, -852005, 983040, 0, -786469, 983040, 1, -720933, 983040, 2, -655397, 983040, 0, -589861, 983040, 1, -524325, 983040, 2, -458789, 983040, 0, -393253, 983040, 1, -327717, 983040, 2, -262181, 983040, 0, -196645, 983040, 1, -131109, 983040, 2, -65573, 983040, 0, -37, 983040, 1, 65499, 983040, 2, 131035, 983040, 0, 196571, 983040, 1, 262107, 983040, 2, 327643, 983040, 0, 393179, 983040, 1, 458715, 983040, 2, 524251, 983040, 0, 589787, 458752, 0, -1245221, 983040, 2, -1179685, 983040, 0, -1114149, 983040, 1, -1048613, 983040, 2, 589788, 458752, 0, 589789, 458752, 0, 589790, 458752, 0, 589791, 458752, 0, 589792, 458752, 0, 589793, 458752, 0, 589794, 458752, 0, 589795, 458752, 0, 589796, 458752, 0, 589797, 458752, 0, 589798, 458752, 0, 589799, 458752, 0, 589800, 458752, 0, 589801, 458752, 0, 589802, 458752, 0, 589803, 458752, 0, 589804, 458752, 0, 589805, 458752, 0, 589806, 458752, 0, 589807, 458752, 0, 589808, 458752, 0, 589809, 458752, 0, 589810, 458752, 0, 589811, 458752, 0, 589812, 458752, 0, 589813, 458752, 0, 589814, 458752, 0, 589815, 458752, 0, 589816, 458752, 0, 589817, 458752, 0, 589818, 458752, 0, 589819, 458752, 0, 589820, 458752, 0, 589821, 458752, 0, 589822, 458752, 0, 589823, 458752, 0, 524288, 458752, 0, 524289, 458752, 0, 524290, 458752, 0, 524291, 458752, 0, 524292, 458752, 0, 524293, 458752, 0, 524294, 458752, 0, 524295, 458752, 0, 524296, 458752, 0, 524297, 458752, 0, 524298, 458752, 0, 524299, 458752, 0, 524300, 458752, 0, 524301, 458752, 0, 524302, 458752, 0, 524303, 458752, 0, 524304, 458752, 0, 524305, 458752, 0, 524306, 458752, 0, 524307, 458752, 0, 524308, 458752, 0, 524309, 458752, 0, 524310, 458752, 0, 524311, 458752, 0, 524312, 458752, 0, 524313, 458752, 0, 524314, 458752, 0, 524315, 458752, 0, 524316, 458752, 0, 524317, 458752, 0, 524318, 458752, 0, 524319, 458752, 0, 524320, 458752, 0, 524321, 458752, 0, 524322, 458752, 0, 524323, 458752, 0, 524324, 458752, 0, 524325, 458752, 0, 524326, 524288, 0)

[node name="player" parent="." instance=ExtResource("2_8m82d")]
position = Vector2(-547, -64)

[node name="chainN3" type="Node2D" parent="."]
position = Vector2(496, 8)
rotation = 0.959931
scale = Vector2(1.696, 1.696)

[node name="chain" parent="chainN3" instance=ExtResource("3_7i8f2")]

[node name="chainN8" type="Node2D" parent="."]
position = Vector2(-393, 6.00001)
rotation = 0.959931
scale = Vector2(1.696, 1.696)

[node name="chain" parent="chainN8" instance=ExtResource("3_7i8f2")]

[node name="chainN2" type="Node2D" parent="."]
position = Vector2(0, 25)
scale = Vector2(1.5, 1.5)
script = SubResource("GDScript_ow0cc")

[node name="chain" parent="chainN2" instance=ExtResource("3_7i8f2")]

[node name="chain2" parent="chainN2" instance=ExtResource("3_7i8f2")]
position = Vector2(-9.09495e-13, -63.0896)
rotation = -3.14159

[node name="chainN6" type="Node2D" parent="."]
position = Vector2(219, 18)
scale = Vector2(2, 2)
script = SubResource("GDScript_ow0cc")

[node name="chain" parent="chainN6" instance=ExtResource("3_7i8f2")]

[node name="chain2" parent="chainN6" instance=ExtResource("3_7i8f2")]
position = Vector2(-9.09495e-13, -63.0896)
rotation = -3.14159

[node name="chainN7" type="Node2D" parent="."]
position = Vector2(-256, 18)
rotation = -5.37561
scale = Vector2(2, 2)
script = SubResource("GDScript_ow0cc")

[node name="chain" parent="chainN7" instance=ExtResource("3_7i8f2")]

[node name="chain2" parent="chainN7" instance=ExtResource("3_7i8f2")]
position = Vector2(-9.09495e-13, -63.0896)
rotation = -3.14159

[node name="chainN4" type="Node2D" parent="."]
position = Vector2(-326, -135)
rotation = 1.5708
scale = Vector2(3, 3)
script = SubResource("GDScript_ow0cc")

[node name="chain" parent="chainN4" instance=ExtResource("3_7i8f2")]

[node name="chain2" parent="chainN4" instance=ExtResource("3_7i8f2")]
position = Vector2(-9.09495e-13, -63.0896)
rotation = -3.14159

[node name="chainN5" type="Node2D" parent="."]
position = Vector2(283, -135)
rotation = 1.5708
scale = Vector2(3, 3)
script = SubResource("GDScript_ow0cc")

[node name="chain" parent="chainN5" instance=ExtResource("3_7i8f2")]

[node name="chain2" parent="chainN5" instance=ExtResource("3_7i8f2")]
position = Vector2(-9.09495e-13, -63.0896)
rotation = -3.14159

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "bigchin"
libraries = {
"": SubResource("AnimationLibrary_cmx8d")
}

[node name="changer" type="Area2D" parent="."]
position = Vector2(597, -11)
script = SubResource("GDScript_i3ii2")

[node name="colo" type="CollisionShape2D" parent="changer"]
shape = SubResource("RectangleShape2D_f5maq")

[node name="back button" type="CanvasLayer" parent="."]
follow_viewport_enabled = true
script = ExtResource("4_dff4l")

[node name="back" type="Button" parent="back button"]
anchors_preset = -1
anchor_top = -0.0123457
anchor_bottom = -0.0123457
offset_left = -554.0
offset_top = -305.0
offset_right = -329.0
offset_bottom = -232.0
scale = Vector2(0.536676, 0.758374)
theme_override_fonts/font = ExtResource("5_t36qj")
theme_override_font_sizes/font_size = 30
text = "Back"
metadata/_edit_use_anchors_ = true

[node name="ASP" parent="." instance=ExtResource("7_fsox0")]

[node name="arrow" parent="." instance=ExtResource("8_qjxhm")]
position = Vector2(549, 83)

[connection signal="body_entered" from="changer" to="changer" method="_on_body_entered"]
[connection signal="pressed" from="back button/back" to="back button" method="_on_back_pressed" flags=18]
